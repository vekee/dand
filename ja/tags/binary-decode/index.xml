<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Binary decode on DUAN DAHAI</title><link>https://www.duandahai.com/ja/tags/binary-decode/</link><description>Recent content in Binary decode on DUAN DAHAI</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 14 Jan 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://www.duandahai.com/ja/tags/binary-decode/index.xml" rel="self" type="application/rss+xml"/><item><title>バイナリコードの文字列変数をデコードする</title><link>https://www.duandahai.com/ja/posts/jp/20230114-python-binary-decode.ja/</link><pubDate>Sat, 14 Jan 2023 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/ja/posts/jp/20230114-python-binary-decode.ja/</guid><description>Pythonでバイナリデータをデコードする方法は、以下のものがあるが、 今回の課題はバイナリデータではなく、バイナリデータの文字列をデコードすることです。
1 2 3 4 5 # エンコード（文字列の&amp;#34;日本&amp;#34;をbytesに変換） print(&amp;#34;日本&amp;#34;.encode(&amp;#34;utf-8&amp;#34;)) # デコード（bytesを文字列の&amp;#34;日本&amp;#34;に変換） print(b&amp;#39;\xe6\x97\xa5\xe6\x9c\xac&amp;#39;.decode(&amp;#34;utf-8&amp;#34;)) なぜこの変な課題があるかは、AWS S3 Triggerで起きたイベントに、日本語名KeyがUTF-8でエンコードされて、以下のように出ています。
1 2 3 4 5 # S3 Trigger設定された元のS3 Key名 &amp;#34;日本/test.pdf&amp;#34; # S3 Triggerで起きたイベントに出ているKey名 &amp;#34;%e6%97%a5%e6%9c%ac/test.pdf&amp;#34; デコード方法 バイナリデータの文字列は、文字列型の変数のため、直接bytes関数よりデコードができません。
また、この変数をさらにエンコードしてから、デコードしてもできません。 以下の結果になります。
1 2 3 bstr = &amp;#34;\xe6\x97\xa5\xe6\x9c\xac&amp;#34; print(bstr.encode(&amp;#34;utf-8&amp;#34;).decode(&amp;#34;utf-8&amp;#34;)) # output：\\xe6\\x97\\xa5\\xe6\\x9c\\xac Pythonのbytes仕様を調べたら、fromhex関数があるため、 16進数の文字を以下のようにデコードができます。
1 2 3 bstr = &amp;#34; e6 97 a5 e6 9c ac&amp;#34; print(bytes.fromhex(bstr)) # output：&amp;#34;日本&amp;#34; 上記の方法を従って、S3 Triggerで起きたイベントに出ているKey名に、 16進数の文字を判別して、fromhexでデコードできる発想がありました。
デコード例： &amp;ldquo;%e6%97%a5%e6%9c%ac/test.pdf&amp;quot;から、&amp;quot;%e6%97%a5%e6%9c%ac&amp;quot;を16進数として判別し、&amp;rdquo; e6 97 a5 e6 9c ac&amp;quot;に変換してからfromhexでデコードします。</description></item></channel></rss>
<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>段大海</title><link>https://www.duandahai.com/zh-cn/</link><description>Recent content on 段大海</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 05 Dec 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://www.duandahai.com/zh-cn/index.xml" rel="self" type="application/rss+xml"/><item><title>使用AWS的S3服务来保存Mastodon的媒体文件</title><link>https://www.duandahai.com/zh-cn/posts/zh/20221205-mastodon-s3.zh-cn/</link><pubDate>Mon, 05 Dec 2022 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/posts/zh/20221205-mastodon-s3.zh-cn/</guid><description> 概要 本文为基于云服务的Mastodon站点搭建的关于使用AWS的S3来保存媒体文件的扩展介绍。
IAM User 创建User，并为User增加你存放文件bucket的访问权限如下。 1 2 3 4 5 6 7 8 9 10 11 { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Sid&amp;#34;: &amp;#34;VisualEditor1&amp;#34;, &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;s3:*&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;arn:aws:s3:::这里放你的文件的bucket名/*&amp;#34; } ] } 生成该User的access Key S3的访问权限设置 设置bucket的访问权限为允许ACL访问，否则会出现访问被拒的Error。 下图设置后的样子。
Mastodon配置文件更新（.env.production） 如果你是按照官方教程配置的话，你的.env.production在/home/mastodon/live下面放着。
更新.env.production里面关于文件存储的以下设置。
参数名 设定值 S3_ENABLED true S3_PROTOCOL https S3_BUCKET 你存放文件的bucket名，例：files.mas2don.org S3_REGION 你存放文件bucket的REGION，例：ap-northeast-1 S3_HOSTNAME 你存放文件bucket的所属Host，例：s3-ap-northeast-1.amazonaws.com AWS_ACCESS_KEY_ID 你为访问S3创建的User的access key id AWS_SECRET_ACCESS_KEY 你为访问S3创建的User的access key secret S3_ALIAS_HOST 可以不用设置，如需配置可参考官方关于s3_alias_host的介绍</description></item><item><title>使用AWS的SES作为Mastodon的邮件送信服务</title><link>https://www.duandahai.com/zh-cn/posts/zh/20221130-mastodon-ses-dns.zh-cn/</link><pubDate>Wed, 30 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/posts/zh/20221130-mastodon-ses-dns.zh-cn/</guid><description>概要 本文为基于云服务的Mastodon站点搭建的关于使用AWS的SES来发送邮件的扩展介绍。
IAM User 创建User，并为User增加SES的送信权限。
我的AWS账户中只有一个SES服务，下面的权限设置中没有区分Resource。 1 2 3 4 5 6 7 8 9 10 { &amp;#34;Version&amp;#34;: &amp;#34;2012-10-17&amp;#34;, &amp;#34;Statement&amp;#34;: [ { &amp;#34;Effect&amp;#34;: &amp;#34;Allow&amp;#34;, &amp;#34;Action&amp;#34;: &amp;#34;ses:SendRawEmail&amp;#34;, &amp;#34;Resource&amp;#34;: &amp;#34;*&amp;#34; } ] } 为创建User增加access key，随后作为SMTP认证用 创建SES的Identity 创建identity，设置Domain为你的域名
设置你送信用的邮箱地址
设置identity的类型
将生成的CNAME记录，追加到你域名的DNS记录中
将生成的MX和TXT记录，追加到你域名的DNS记录中
追加后的DNS记录里面，CNAME,MX和TXT记录如下
申请解除SES的送信限制 在上面的Identity验证成功的基础上，向AWS support发送增加送信次数的申请申请。
Mastodon配置文件更新（.env.production） 如果你是按照官方教程配置的话，你的.env.production在/home/mastodon/live下面放着。
更新.env.production里面关于文件存储的以下设置。
参数名 设定值 SMTP_SERVER SMTP主机服务器，例：email-smtp.ap-northeast-1.amazonaws.com SMTP_PORT 587 SMTP_LOGIN 你为使用SES创建的User的access key id SMTP_PASSWORD 你为使用SES创建的User的access key secret SMTP_AUTH_METHOD none SMTP_OPENSSL_VERIFY_MODE none SMTP_FROM_ADDRESS 验证过的送信邮箱，例：noreply@mas2don.org (https://docs.joinmastodon.org/admin/config/#s3_alias_host)的介绍 其他 Identity验证最多会花费72小时，建议仔细检查CNAME，MX,TXT的DNS记录是否设置正确，以免耽误等待时间。</description></item><item><title>基于云服务的Mastodon站点搭建</title><link>https://www.duandahai.com/zh-cn/posts/zh/20221125-mastodon-site-create.zh-cn/</link><pubDate>Fri, 25 Nov 2022 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/posts/zh/20221125-mastodon-site-create.zh-cn/</guid><description>Mastodon简介 一言蔽之就是一个去中心化的开源社交媒体。 详细内容请参看mastodon官方介绍。
能够看到这篇文章的人，我相信已经对Mastodon有了一定的了解，我就直入主题，讲讲我是如何搭建Mastodon站点的，过程中遇到的那些坑以及我会给打算尝试朋友的一些建议。
Mastodon的搭建教程 Mastodon的instance搭建教程都是放在官方的documentation里面，搭建教程主要是以下章节。
Running your own server Preparing your machine Installing from source 注意：由于所有的文档都是Mastodon社区维护的，虽然有中文的版本，但可能不是最新的。建议中文和英文的都先浏览一遍，最后按照英文的文档实施。
Running your own server 这个章节是告诉你，要搭建Mastodon站点需要准备的内容。 它列出了可以提供一条龙托管服务的网站，以及一键安装的镜像文件，
当然，既然你来到这里，肯定是希望自己动手从头尝试的，那么请继续看下面。
域名(A domain name)
我选择的是onamae，当然你也可以选择像godaddy等其他的域名服务商。
不过既然是基于云服务的，我建议你选择你所用云服务商的域名服务，因为在随后的一些设置中会方便很多，管理上也会很方便。
当然，如果你像我一样，已经有很多域名托管在某个服务商那里的话，不妨集中在那里管理也可以。
主机(A VPS)
我选择使用AWS的EC2, 主机大小是双核4G，100G存储，目标支撑2000日活用户。
不建议选择很便宜的VPS，因为一份价钱一分货，从我使用VPS的经验来看，共用的主机的VPS被攻击，中毒，宕机，访问慢等各种问题太多了，使用感很差，但就是便宜。
邮件服务(An e-mail provider)
我用的是AWS的云服务，当然选择AWS里面的邮件服务SES。
你可以选择其他的专门邮件服务商，因为管理各种账号太麻烦，而且云服务的邮件服务免费额度也很大，扩展性更不用说，所以我首先使用云服务商的邮件服务。
但是，AWS的SES默认是有送信限制，以及需要事前登录被送信者邮箱地址的，这根本不符合需求啊，但是请记住，AWS的SES是可以申请解除该限制的。
关于如何解除该限制，我会在下面的一篇文章中介绍。
《使用AWS的SES作为Mastodon的邮件送信服务》
存储服务(Object storage provider)
我这边就直接使用AWS S3的存储服务了。
不建议将文件的存储放在主机上。
在设定AWS S3时，会出现访问S3被拒的问题，解决方法我放在下面一篇文章中介绍了。
《使用AWS的S3服务来保存Mastodon的媒体文件》
Preparing your machine 这个章节中主要是准备你的主机，建议准备官方教程指定的OS版本（2022年12月为Ubuntu 20.04），这个章节基本上没有问题。
因为我使用的是AWS的EC2, 所以我可以在AWS上对主机额外再设置一份访问限制。 你如果也要这样做的话，注意不要把应该要有的访问给限制了。
Installing from source 经验总结
这个章节中会出现一些问题，一定要通篇浏览教程后，严格按照教程走，不然出现问题不太好分析原因。 设置过程中，出现的各类问题最好都能随时保存下来，为随后自己学习也为Mastodon社区的发展更新贡献一份力。 各种密码以及账号，一定要随时设置随时记录保存下来。 一些source的版本随后可能需要随着Mastodon的版本更新而再更新，但是不用担心，现在只需要按照官方教程的版本走就没有问题。 官方教程的数据库是没有和主机分离的，对于最初的你来说，不是什么大问题而且会节省不少费用，如果你的主机人数达到很多的时候，再考虑将数据库单独移出来也并不麻烦。 可能发生的问题汇总</description></item><item><title>Java中static关键字</title><link>https://www.duandahai.com/zh-cn/posts/zh/20211230-java-static.zh-cn/</link><pubDate>Thu, 30 Dec 2021 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/posts/zh/20211230-java-static.zh-cn/</guid><description>本文介绍关于Java中static对象(static修饰的变量或者方法)的一些特点
内存加载 static对象和需要初期化对象的保存内存领域是不同的。
class类文件加载后，static和static以外的对象，分别保存在不同的内存空间中。static对象保存在称为[static领域]的内存中，static以外的对象保存在[heap领域]中，heap领域的class会被初期化生成。因为static对象，在class文件加载后立马进行内存分配，所以static对象被访问时，可以直接调用(Class名.static对象名)，当然也可以被生成的初期化对象调用(instanceOBJ.static对象名)。
由同一个Class生成的不同初期化对象中，所持有以及操作的同一个static对象是完全相同的,不会因调用对象而不同。
由于static对象是无需初期化生成即可使用的，因此在static方法中可以调用static对象，却不能调用还需要初期化生成的对象。相反，在初期化生成的对象中，可以随意调用static对象。
如下图：</description></item><item><title>Workflow服务在Cloud中的应用场景小结</title><link>https://www.duandahai.com/zh-cn/posts/zh/20211106-workflow-actions.zh-cn/</link><pubDate>Sat, 06 Nov 2021 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/posts/zh/20211106-workflow-actions.zh-cn/</guid><description>本文介绍关于Workflow在Cloud服务中的一些应用场景。
Workflow服务的概念 英文：Workflow as a service。直接翻译为中文：工作流服务
工作流可以简单理解为企业或者个人处理业务的一个流程。简单的工作流举例如下图： 在Cloud中，即是将工作流转化为一种可提供的Cloud服务。该服务可能是固定形式的，也可能是根据具体业务场景自定义开发，后者支持范围广，服务场景多，在Cloud服务中比较常见。 AWS中的Workflow服务-Amazon Simple Workflow Service (SWF) AWS官网称SWF是一种低代码可视化工作流服务，用于编排AWS服务、自动化业务流程或构建无服务器应用程序。具有以下特点：
逻辑分隔
流程控制、底层的状态结构和任务分派分开管理，降低耦合性，方便修改维护。
可靠
SWF在Amazon 的高可用性数据中心中运行，因此状态追踪和任务处理引擎可以在应用程序需要时随时可用。SWF还具有冗余存储任务，可将它们指派到应用程序组件，追踪进度并使其保持最新状态。
简单
SWF用全托管的云工作流Web服务替代复杂的定制代码，属于工作流解决方案和流程自动化软件。开发人员不再需要管理流程自动化的基础设施，可以将精力集中在应用程序的独特功能上。
可扩展
SWF可以随着应用程序的使用进行无缝调节。无需对工作流服务进行人工管理，即可在应用程序中添加更多云工作流或增加工作流复杂性。
灵活
SWF中可以使用多种编程语言进行应用程序组件和协作逻辑编写，并在云中或本地运行。
Salesforce中的Workflow服务-workflow Salesforce对workflow解释为将企业标准的业务、程序进行自动化，以提高业务流程效率。
Google中的Workflow服务 Google中的Workflow是一种对给定任务进行可编排的的服务平台。主要的应用场景：
各种服务的编排
Batch Job处理
业务流程处理
业务自动化
Github中的Workflow服务 Github中的Workflow是由GitHub Actions的事件触发而执行一系列针对Reposityd的处理。
其他企业提供的Workflow服务 针对特定工作任务提供标准泛用功能服务 低代码平台实现工作任务的电子化 Workflow服务中需要的底层技术支持 针对各种服务的最优资源调度是Workflow实现所要面对的共同问题。
为什么会用到Workflow服务，Workflow服务的优点缺点 更新中
参考資料 https://www.sciencedirect.com/science/article/pii/S1877050914002269</description></item><item><title>主页</title><link>https://www.duandahai.com/zh-cn/about/</link><pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/about/</guid><description>这是一个关于我个人的多语言博客，记录我在技术进阶过程中遇到的问题，还有那些被我一直保存在记事本中的故事，如果您喜欢请点击主页的订阅。
下面是我为您推荐的一些文章：
Database monitoring system StepFunctionsにLambda動的並列実行 Simple setup spark in windows OS Workflow在Cloud服务中的应用场景小结 如果您对我的项目感兴趣并想了解更多，请关注我的GitHub。</description></item><item><title>关于我</title><link>https://www.duandahai.com/zh-cn/contact/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/contact/</guid><description>我是一位居住在日本的华人IT工程师，喜欢阅读和音乐，最近有些书荒，有好书的朋友可以推荐给我，谢谢！
如果您对我的文章，项目，故事感兴趣，请联系我, duandahai66@gmail.com。</description></item><item><title>项目</title><link>https://www.duandahai.com/zh-cn/projects/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://www.duandahai.com/zh-cn/projects/</guid><description>DBMerge Diff tables in Oracle database with high speed.
formsendbox Send mail web service.
timecard-online Create and send timecard pdf by online.
D-Tools Useful and efficiently VBA Tools in develop work.</description></item></channel></rss>
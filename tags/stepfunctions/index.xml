<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Stepfunctions on DUAN DAHAI</title>
    <link>https://www.duandahai.com/tags/stepfunctions/</link>
    <description>Recent content in Stepfunctions on DUAN DAHAI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.duandahai.com/tags/stepfunctions/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>マップ状態を利用して、動的並列にLambdaを多重で実行する</title>
      <link>https://www.duandahai.com/posts/20211027-aws-stepfunctions-map-state.ja-copy/</link>
      <pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.duandahai.com/posts/20211027-aws-stepfunctions-map-state.ja-copy/</guid>
      <description>Lambda実行時間の最大15分制限より、15分以内に処理完了するために、同一Lambdaを並行で処理する対策を説明します。
対策概要     AWS Lambda 関数：動的並列数制御処理 AWS Lambda 関数：業務処理 AWS Step Functions ステートマシン  動的並列数制御処理に処理する全体のデータ量より、並列数、各並列起動で処理するデータを決めて、Step Functions の OutputPathに並列数と同じなサイズのJsonリストで返却します。 Map stateがJsonリストの要素ごとに、各並列起動情報を引数として、業務処理を起動します。 業務処理に振り分けされたそれぞれの処理対象を処理して、15分以内に完了するように実現できます。
動的並列数制御処理    全件105のデータを多重で処理する、1ジョブに最大10件処理をする場合、 以下のデータリストを作成します。 [ { &amp;lsquo;oneJobProcessingCount&amp;rsquo;: 10, &amp;lsquo;offset&amp;rsquo;: 0 }, { &amp;lsquo;oneJobProcessingCount&amp;rsquo;: 10, &amp;lsquo;offset&amp;rsquo;: 10 }, { &amp;lsquo;oneJobProcessingCount&amp;rsquo;: 10, &amp;lsquo;offset&amp;rsquo;: 20 } ・・・・・・ { &amp;lsquo;oneJobProcessingCount&amp;rsquo;: 5, &amp;lsquo;offset&amp;rsquo;: 100 } ] Note that you can use Markdown syntax within a blockquote.
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28  import json def lambda_handler(event, context): totalProcessRecordCount = 105 oneJobProcessMaxCount = 10 jobCount = totalProcessRecordCount // oneJobProcessMaxCount controlInfoList = [] for jobIndex in range(jobCount): controlInfo = { &amp;#39;oneJobProcessingCount&amp;#39;: oneJobProcessMaxCount, &amp;#39;offset&amp;#39;: jobIndex * oneJobProcessMaxCount } controlInfoList.</description>
    </item>
    
  </channel>
</rss>

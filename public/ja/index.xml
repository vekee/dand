<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DUAN DAHAI</title>
    <link>https://www.duandahai.com/ja/</link>
    <description>Recent content on DUAN DAHAI</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 27 Oct 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://www.duandahai.com/ja/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>マップ状態を利用して、動的並列にLambdaを多重で実行する</title>
      <link>https://www.duandahai.com/ja/posts/jp/20211027-aws-stepfunctions-map-state/</link>
      <pubDate>Wed, 27 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.duandahai.com/ja/posts/jp/20211027-aws-stepfunctions-map-state/</guid>
      <description>Lambda実行時間の最大15分制限より、15分以内に処理完了するために、同一Lambdaを並行で処理する対策を説明します。
対策概要     AWS Lambda 関数：動的並列数制御処理 AWS Lambda 関数：業務処理 AWS Step Functions ステートマシン  動的並列数制御処理に処理する全体のデータ量より、並列数、各並列起動で処理するデータを決めて、Step Functions の OutputPathに並列数と同じなサイズのJsonリストで返却します。 Map stateがJsonリストの要素ごとに、各並列起動情報を引数として、業務処理を起動します。 業務処理に振り分けされたそれぞれの処理対象を処理して、15分以内に完了するように実現できます。
動的並列数制御処理    全件105のデータを多重で処理して、一つ並行処理ジョブに最大10件を処理する場合、 以下の制御情報リストを作成とします。
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19  [ { &amp;#39;oneJobProcessingCount&amp;#39;: 10, &amp;#39;offset&amp;#39;: 0 }, { &amp;#39;oneJobProcessingCount&amp;#39;: 10, &amp;#39;offset&amp;#39;: 10 }, { &amp;#39;oneJobProcessingCount&amp;#39;: 10, &amp;#39;offset&amp;#39;: 20 } ・・・・・・ { &amp;#39;oneJobProcessingCount&amp;#39;: 5, &amp;#39;offset&amp;#39;: 100 } ]   下記は制御情報を返却する実装例です。</description>
    </item>
    
    <item>
      <title>ホーム</title>
      <link>https://www.duandahai.com/ja/about/</link>
      <pubDate>Mon, 25 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.duandahai.com/ja/about/</guid>
      <description>段大海の個人多言語ブログです。技術成長中に解決した問題、ソリューションを記録すると思います。また、ノートに記載している自分の過去のことをブログに移行する予定です。好きな文章があれば、ホームページのRSSをクリックして頂ければ幸いです。
お薦め文章：
 StepFunctionsにLambda動的並列実行  私のプロジェクトに趣味があれば、またもっと知りたいであれば、GitHubをご覧ください</description>
    </item>
    
    <item>
      <title>深層学習-第二章-線形代数</title>
      <link>https://www.duandahai.com/ja/posts/jp/20210815-deeplearning-chapter2/</link>
      <pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://www.duandahai.com/ja/posts/jp/20210815-deeplearning-chapter2/</guid>
      <description>深層学習を勉強したメモです
2.1 スカラー、ベクトル、行列、テンソル     スカラー（scalars）：スカラーは単なる単一の数である。 ヘクトル（vectors）：ベクトルは数値の配列である。 行列（matrices）：行列は2-Dの数値配列なので、各成分は一つだけでなく２つのインデックスで示される。 テンソル（tensors）：場合によっては、３つ以上の軸を持つ配列が必要になる。  Tip  行列の転置（transpose）の概念。
ブロードキャスティング（broadcasting）の概念.
  2.2 行列とベクトルの乗算    2.3 単位行列と逆行列    2.4 線形従属と張る空間    2.5 ノルム    2.6 特殊な行列とベクトル    2.7 固有値分解    2.8 特異値分解    2.9 ムーア・ペンローズ擬似逆行列    2.10 トレース演算子    2.11 行列式    2.12 例：主成分分析    参考資料      DEEP LEARNING - IAN Goodfellow, Yoshua Bengio, Aaron Courville</description>
    </item>
    
    <item>
      <title>プロジェクト</title>
      <link>https://www.duandahai.com/ja/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.duandahai.com/ja/projects/</guid>
      <description>DBMerge     Diff tables in Oracle database with high speed.
 formsendbox     Send mail web service.
 timecard-online     Create and send timecard pdf by online.
 D-Tools     Useful and efficiently VBA Tools in develop work.
 </description>
    </item>
    
    <item>
      <title>私について</title>
      <link>https://www.duandahai.com/ja/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://www.duandahai.com/ja/contact/</guid>
      <description>私は日本でシステム開発を従事しています。 本読み、音楽が好きです。最近読みたい本が見つからなくで、いいものがあれば、ご共有頂ければ幸いです。
私のブログ、プロジェクトに趣味があれば、ご遠慮なくご連絡ください。 duandahai66@gmail.com</description>
    </item>
    
  </channel>
</rss>
